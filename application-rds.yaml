tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-kubernetes-plugin
  - RDS--backend-rds.yaml

inputs:

  current_suffix_index:
    type: string
    description: The index of the deployment from a components composition
    default: '2'

  openshift_cluster_url:
    type: string
    description: The URL of the Openshift cluster
    default: apps.os-cb-cluster1.w1b2.p1.openshiftapps.com
    constraints:
      - valid_values:
        - apps.os-cb-cluster1.w1b2.p1.openshiftapps.com
        - apps.os-cb-cluster3.p3w0.p1.openshiftapps.com

  ingress_url:
    type: string
    description: The URL of the Ingress in Openshift. Equals the domain value by default.
    default: www.cloudifydemo.link

node_types:

  cloudify.kubernetes.resources.PersistentVolumeClaim:
    derived_from: cloudify.kubernetes.resources.CustomBlueprintDefinedResource
    properties:
      api_mapping:
        default:
          create:
            api: CoreV1Api
            method: create_namespaced_persistent_volume_claim
            payload: V1PersistentVolumeClaim
          read:
            api: CoreV1Api
            method: read_namespaced_persistent_volume_claim
          delete:
            api: CoreV1Api
            method: delete_namespaced_persistent_volume_claim
            payload: V1DeleteOptions
          update:
            api: CoreV1Api
            method: patch_namespaced_persistent_volume_claim

node_templates:

  pv:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/pv.yaml
        template_variables:
          NAME: { concat: [  'wp-pv-',  { get_input: current_suffix_index } ] }
          NAMESPACE: { get_secret: openshift_namespace }
          PATH:  { concat: [  '/tmp/data/wp-pv-',  { get_input: current_suffix_index } ] }
          EFS_URL: { get_attribute: [RDS--openshift_cluster, efs_config, url] }
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master

  pv-claim:
    type: cloudify.kubernetes.resources.PersistentVolumeClaim
    properties:
      definition:
        apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
          name: { concat: [  'wp-pv-claim-', { get_input: current_suffix_index } ] }
          namespace: { get_secret: openshift_namespace }
          labels:
            app:  { concat: [  'wordpress-',  { get_input: current_suffix_index } ] }
        spec:
          storageClassName: aws-efs
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: 20Gi
          selector:
            matchLabels:
              type: "local"
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: pv

  service:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/service.yaml
        template_variables:
          NODE_PORT: { get_attribute: [ service, node_port ] }
          PORT: 80
          NAME: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
          NAMESPACE: { get_secret: openshift_namespace }
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: pv-claim

  deploy:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      definition:
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: { concat:  [  'wordpress-', { get_input: current_suffix_index } ] }
          namespace: { get_secret: openshift_namespace }
          labels:
            app: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
        spec:
          replicas: 3
          strategy:
            type: Recreate
          selector:
            matchLabels:
                app: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
                tier: frontend
          template:
            metadata:
              labels:
                app: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
                tier: frontend
            spec:
              replicas: 3
              containers:
              - image: wordpress:4.8.0-apache
                name: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
                env:
                  - name: WORDPRESS_DB_HOST
                    # value: { get_capability: [ { get_input: load_balancer_deployment }, db_endpoint ] }
                    value: { get_attribute: [RDS--terraform_module, resources, main_db_rds, instances, 0, attributes, address] }
                  - name: WORDPRESS_DB_USER
                    value: { get_input: RDS--db_username }
                  - name: WORDPRESS_DB_PASSWORD
                    value: { get_input: RDS--db_password }
                  - name: WORDPRESS_DB_NAME
                    value: { get_input: RDS--db_name }
                  - name: WORDPRESS_TABLE_PREFIX
                    value: cfy
                ports:
                  - containerPort: 80
                    name: { concat: [  'wordpress-', { get_input: current_suffix_index } ] }
                volumeMounts:
                  - name:  { concat: [  'wordpress-persistent-storage-', { get_input: current_suffix_index } ] }
                    mountPath: /var/www/html
              volumes:
                - name:  { concat: [  'wordpress-persistent-storage-', { get_input: current_suffix_index } ] }
                  persistentVolumeClaim:
                    claimName: { concat: [  'wp-pv-claim-', { get_input: current_suffix_index } ] }
              terminationGracePeriodSeconds: 5
    relationships:
      - type: cloudify.relationships.depends_on
        target: RDS--terraform_module
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.depends_on
        target: service

  ingress:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/ingress.yaml
        template_variables:
          NAME: { concat: [ 'ingress-', { get_input: current_suffix_index } ] }
          NAMESPACE: { get_secret: openshift_namespace }
          URL: { get_input: ingress_url }
          SERVICE_NAME: { concat: [ 'wordpress-', { get_input: current_suffix_index } ] }
          SERVICE_PORT: 80
          HOSTNAME: { get_input: openshift_cluster_url }
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master

  master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        api_options: { get_attribute: [RDS--openshift_cluster, api_config] }
    relationships:
      - target: RDS--openshift_cluster
        type: cloudify.relationships.depends_on
