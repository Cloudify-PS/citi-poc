tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.2/types.yaml
  - plugin:cloudify-terraform-plugin?version= >=0.15.0

inputs:

  aws_region:
    type: string
    description: AWS region to launch servers
    required: true
    default: eu-west-2

  availability_zones:
    type: list
    description: AWS ELB availability zones
    required: true
    default: [ eu-west-2a, eu-west-2b ]

  db_name:
    type: string
    description: Name of the database to be created. Must begin with a letter and contain only alphanumeric characters.
    required: true
    default: CloudifyDB1
    constraints:
      - pattern: "^[a-zA-Z][a-zA-Z0-9]+$"

  db_username:
    type: string
    description: Name of the database user
    required: true
    default: { get_secret: db_username }

  db_password:
    type: string
    description: Password of the database user
    required: true
    default: { get_secret: db_password }
    
  db_cidr:
    type: dict
    description: RDS DB networking CIDRs
    required: true
    default:
      vpc: 10.1.0.0/16
      main_subnet: 10.1.1.0/24
      backup_subnet: 10.1.2.0/24

  openshift_cluster:
    type: string
    description: Openshift networking config
    required: true
    constraints:
      - valid_values:
          - os-cb-cluster1
          - os-cb-cluster2


node_templates:

  openshift_cluster:
    type: cloudify.nodes.secrets.Reader
    properties:
      keys:
        - openshift_cluster
      variant: { get_input: openshift_cluster }

  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/0.14.3/terraform_0.14.3_linux_amd64.zip

  rds_db_terraform:
    type: cloudify.nodes.terraform.Module
    properties:
      resource_config:
        variables:
          aws_region: { get_input: aws_region }
          access_key: { get_secret: aws_access_key }
          secret_key: { get_secret: aws_secret_key }
          availability_zones: { get_input: availability_zones }
          db_name: { get_input: db_name }
          db_username: { get_input: db_username }
          db_password: { get_input: db_password }
          openshift_vpc_id: { get_attribute: [openshift_cluster, data, openshift_cluster, value, network_config, vpc, id] }
          openshift_route_tb_id: { get_attribute: [openshift_cluster, data, openshift_cluster, value, network_config, route_tb] }
          openshift_public_subnet_id: { get_attribute: [openshift_cluster, data, openshift_cluster, value, network_config, public_subnet] }
          openshift_security_group_id: { get_attribute: [openshift_cluster, data, openshift_cluster, value, network_config, security_group] }
          openshift_vpc_cidr: { get_attribute: [openshift_cluster, data, openshift_cluster, value, network_config, vpc, cidr] }
          db_vpc_cidr: { get_input: [db_cidr, vpc] }
          main_db_subnet_cidr: { get_input: [db_cidr, main_subnet] }
          backup_db_subnet_cidr: { get_input: [db_cidr, backup_subnet] }
        source:
          location: https://github.com/Cloudify-PS/citi-poc-tf/archive/refs/heads/rds_dev.zip
          username: { get_secret: github_username }
          password: { get_secret: github_password }
    relationships:
      - target: openshift_cluster
        type: cloudify.relationships.depends_on
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host


capabilities:

  db_endpoint:
    description: RDS endpoint
    value: { get_attribute: [rds_db_terraform, resources, main_db_rds, instances, 0, attributes, address] }
